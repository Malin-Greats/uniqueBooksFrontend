{"version":3,"sources":["views/pages/authentication/auth-forms/AuthLogin.js","assets/images/auth/auth-blue-card.svg","assets/images/auth/auth-purple-card.svg","views/pages/authentication/authentication1/Login1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","views/pages/authentication/AuthWrapper1.js","ui-component/cards/AuthSlider.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","assets/images/auth/auth-pattern.svg","assets/images/auth/auth-pattern-dark.svg","ui-component/cards/BackgroundPattern1.js"],"names":["JWTLogin","loginProp","others","theme","useTheme","login","useAuth","scriptedRef","useScriptRef","React","useState","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","alert","current","success","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","sx","typography","customInput","htmlFor","id","type","value","name","onBlur","onChange","inputProps","Boolean","endAdornment","position","onClick","onMouseDown","edge","size","label","container","alignItems","justifyContent","item","control","target","color","variant","component","Link","to","textDecoration","mt","disabled","PurpleWrapper","styled","content","top","left","width","backgroundSize","height","backgroundImage","AuthPurpleCard","backgroundRepeat","backgroundPosition","animation","AuthBlueCard","animationDelay","items","title","description","Login","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","Grid","minHeight","md","lg","my","AuthCardWrapper","spacing","xs","direction","Stack","textAlign","Typography","palette","secondary","main","gutterBottom","mb","sm","Logo","AuthLogin","Divider","alignSelf","display","BackgroundPattern1","pb","AuthSlider","children","other","maxWidth","margin","flexGrow","flexBasis","p","xl","scripted","useRef","useEffect","backgroundColor","mode","background","default","primary","light","autoplay","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","map","i","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","_extends","text","disableRipple","alpha","action","active","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","fontSize","_interopRequireDefault","require","Object","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","Box","bgcolor","dark","AuthPatternDark","AuthPattern","overflow","m","right","bottom","opacity"],"mappings":"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","file":"static/js/73.78e7b812.chunk.js","sourcesContent":["// import PropTypes from 'prop-types';\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// // material-ui\r\n// import { useTheme } from '@mui/material/styles';\r\n// import {\r\n//     Box,\r\n//     Button,\r\n//     Checkbox,\r\n//     Divider,\r\n//     FormControl,\r\n//     FormControlLabel,\r\n//     FormHelperText,\r\n//     Grid,\r\n//     IconButton,\r\n//     InputAdornment,\r\n//     InputLabel,\r\n//     OutlinedInput,\r\n//     Stack,\r\n//     Typography,\r\n//     useMediaQuery\r\n// } from '@mui/material';\r\n\r\n// // third party\r\n// import * as Yup from 'yup';\r\n// import { Formik } from 'formik';\r\n\r\n// // project imports\r\n// import useConfig from 'hooks/useConfig';\r\n// import useAuth from 'hooks/useAuth';\r\n// import useScriptRef from 'hooks/useScriptRef';\r\n// import AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// // assets\r\n// import Visibility from '@mui/icons-material/Visibility';\r\n// import VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// import Google from 'assets/images/icons/social-google.svg';\r\n\r\n// // ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\n// const FirebaseLogin = ({ loginProp, ...others }) => {\r\n//     const theme = useTheme();\r\n//     const scriptedRef = useScriptRef();\r\n//     const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n//     const { borderRadius } = useConfig();\r\n//     const [checked, setChecked] = React.useState(true);\r\n\r\n//     const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n//     const googleHandler = async () => {\r\n//         try {\r\n//             await firebaseGoogleSignIn();\r\n//         } catch (err) {\r\n//             console.error(err);\r\n//         }\r\n//     };\r\n\r\n//     const [showPassword, setShowPassword] = React.useState(false);\r\n//     const handleClickShowPassword = () => {\r\n//         setShowPassword(!showPassword);\r\n//     };\r\n\r\n//     const handleMouseDownPassword = (event) => {\r\n//         event.preventDefault();\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n//                 <Grid item xs={12}>\r\n//                     <AnimateButton>\r\n//                         <Button\r\n//                             disableElevation\r\n//                             fullWidth\r\n//                             onClick={googleHandler}\r\n//                             size=\"large\"\r\n//                             variant=\"outlined\"\r\n//                             sx={{\r\n//                                 color: 'grey.700',\r\n//                                 backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n//                                 borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100]\r\n//                             }}\r\n//                         >\r\n//                             <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n//                                 <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n//                             </Box>\r\n//                             Sign in with Google\r\n//                         </Button>\r\n//                     </AnimateButton>\r\n//                 </Grid>\r\n//                 <Grid item xs={12}>\r\n//                     <Box\r\n//                         sx={{\r\n//                             alignItems: 'center',\r\n//                             display: 'flex'\r\n//                         }}\r\n//                     >\r\n//                         <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n//                         <Button\r\n//                             variant=\"outlined\"\r\n//                             sx={{\r\n//                                 cursor: 'unset',\r\n//                                 m: 2,\r\n//                                 py: 0.5,\r\n//                                 px: 7,\r\n//                                 borderColor:\r\n//                                     theme.palette.mode === 'dark'\r\n//                                         ? `${theme.palette.dark.light + 20} !important`\r\n//                                         : `${theme.palette.grey[100]} !important`,\r\n//                                 color: `${theme.palette.grey[900]} !important`,\r\n//                                 fontWeight: 500,\r\n//                                 borderRadius: `${borderRadius}px`\r\n//                             }}\r\n//                             disableRipple\r\n//                             disabled\r\n//                         >\r\n//                             OR\r\n//                         </Button>\r\n\r\n//                         <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n//                     <Box sx={{ mb: 2 }}>\r\n//                         <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n//                     </Box>\r\n//                 </Grid>\r\n//             </Grid>\r\n\r\n//             <Formik\r\n//                 initialValues={{\r\n//                     email: 'info@codedthemes.com',\r\n//                     password: '123456',\r\n//                     submit: null\r\n//                 }}\r\n//                 validationSchema={Yup.object().shape({\r\n//                     email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n//                     password: Yup.string().max(255).required('Password is required')\r\n//                 })}\r\n//                 onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n//                     try {\r\n//                         await firebaseEmailPasswordSignIn(values.email, values.password).then(\r\n//                             () => {\r\n//                                 // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\r\n//                                 // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\r\n//                                 // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n//                                 // github issue: https://github.com/formium/formik/issues/2430\r\n//                             },\r\n//                             (err) => {\r\n//                                 if (scriptedRef.current) {\r\n//                                     setStatus({ success: false });\r\n//                                     setErrors({ submit: err.message });\r\n//                                     setSubmitting(false);\r\n//                                 }\r\n//                             }\r\n//                         );\r\n//                     } catch (err) {\r\n//                         console.error(err);\r\n//                         if (scriptedRef.current) {\r\n//                             setStatus({ success: false });\r\n//                             setErrors({ submit: err.message });\r\n//                             setSubmitting(false);\r\n//                         }\r\n//                     }\r\n//                 }}\r\n//             >\r\n//                 {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n//                     <form noValidate onSubmit={handleSubmit} {...others}>\r\n//                         <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n//                             <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n//                             <OutlinedInput\r\n//                                 id=\"outlined-adornment-email-login\"\r\n//                                 type=\"email\"\r\n//                                 value={values.email}\r\n//                                 name=\"email\"\r\n//                                 onBlur={handleBlur}\r\n//                                 onChange={handleChange}\r\n//                                 // label=\"Email Address / Username\"\r\n//                                 label=\"Username\"\r\n//                                 inputProps={{}}\r\n//                             />\r\n//                             {touched.email && errors.email && (\r\n//                                 <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n//                                     {errors.email}\r\n//                                 </FormHelperText>\r\n//                             )}\r\n//                         </FormControl>\r\n\r\n//                         <FormControl\r\n//                             fullWidth\r\n//                             error={Boolean(touched.password && errors.password)}\r\n//                             sx={{ ...theme.typography.customInput }}\r\n//                         >\r\n//                             <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n//                             <OutlinedInput\r\n//                                 id=\"outlined-adornment-password-login\"\r\n//                                 type={showPassword ? 'text' : 'password'}\r\n//                                 value={values.password}\r\n//                                 name=\"password\"\r\n//                                 onBlur={handleBlur}\r\n//                                 onChange={handleChange}\r\n//                                 endAdornment={\r\n//                                     <InputAdornment position=\"end\">\r\n//                                         <IconButton\r\n//                                             aria-label=\"toggle password visibility\"\r\n//                                             onClick={handleClickShowPassword}\r\n//                                             onMouseDown={handleMouseDownPassword}\r\n//                                             edge=\"end\"\r\n//                                             size=\"large\"\r\n//                                         >\r\n//                                             {showPassword ? <Visibility /> : <VisibilityOff />}\r\n//                                         </IconButton>\r\n//                                     </InputAdornment>\r\n//                                 }\r\n//                                 label=\"Password\"\r\n//                                 inputProps={{}}\r\n//                             />\r\n//                             {touched.password && errors.password && (\r\n//                                 <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n//                                     {errors.password}\r\n//                                 </FormHelperText>\r\n//                             )}\r\n//                         </FormControl>\r\n//                         <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n//                             <FormControlLabel\r\n//                                 control={\r\n//                                     <Checkbox\r\n//                                         checked={checked}\r\n//                                         onChange={(event) => setChecked(event.target.checked)}\r\n//                                         name=\"checked\"\r\n//                                         color=\"primary\"\r\n//                                     />\r\n//                                 }\r\n//                                 label=\"Remember me\"\r\n//                             />\r\n//                             <Typography\r\n//                                 variant=\"subtitle1\"\r\n//                                 component={Link}\r\n//                                 to={\r\n//                                     loginProp\r\n//                                         ? `/pages/forgot-password/forgot-password${loginProp}`\r\n//                                         : '/pages/forgot-password/forgot-password3'\r\n//                                 }\r\n//                                 color=\"secondary\"\r\n//                                 sx={{ textDecoration: 'none' }}\r\n//                             >\r\n//                                 Forgot Password?\r\n//                             </Typography>\r\n//                         </Stack>\r\n//                         {errors.submit && (\r\n//                             <Box sx={{ mt: 3 }}>\r\n//                                 <FormHelperText error>{errors.submit}</FormHelperText>\r\n//                             </Box>\r\n//                         )}\r\n\r\n//                         <Box sx={{ mt: 2 }}>\r\n//                             <AnimateButton>\r\n//                                 <Button\r\n//                                     disableElevation\r\n//                                     disabled={isSubmitting}\r\n//                                     fullWidth\r\n//                                     size=\"large\"\r\n//                                     type=\"submit\"\r\n//                                     variant=\"contained\"\r\n//                                     color=\"secondary\"\r\n//                                 >\r\n//                                     Sign in\r\n//                                 </Button>\r\n//                             </AnimateButton>\r\n//                         </Box>\r\n//                     </form>\r\n//                 )}\r\n//             </Formik>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// FirebaseLogin.propTypes = {\r\n//     loginProp: PropTypes.number\r\n// };\r\n\r\n// export default FirebaseLogin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ===============================|| JWT LOGIN ||=============================== //\r\n\r\nconst JWTLogin = ({ loginProp, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const { login } = useAuth();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await login(values.email, values.password);\r\n                    alert(values.email)\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    {/* <FormControl  error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}> */}\r\n                    <FormControl fullWidth sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-login\">Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-login\"\r\n                            type=\"text\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            fullWidth\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                        {/* {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        )} */}\r\n                    </FormControl>\r\n\r\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-login\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                            label=\"Password\"\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Keep me logged in\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={\r\n                                    loginProp\r\n                                        ? `/pages/forgot-password/forgot-password${loginProp}`\r\n                                        : '/pages/forgot-password/forgot-password3'\r\n                                }\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {errors.submit && (\r\n                        <Box sx={{ mt: 3 }}>\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\r\n                                Sign In\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nJWTLogin.propTypes = {\r\n    loginProp: PropTypes.number\r\n};\r\n\r\nexport default JWTLogin;\r\n","export default __webpack_public_path__ + \"static/media/auth-blue-card.21877993.svg\";","export default __webpack_public_path__ + \"static/media/auth-purple-card.f8fb8b2f.svg\";","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport Logo from 'ui-component/Logo';\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\nimport AuthSlider from 'ui-component/cards/AuthSlider';\r\n\r\n// assets\r\nimport AuthBlueCard from 'assets/images/auth/auth-blue-card.svg';\r\nimport AuthPurpleCard from 'assets/images/auth/auth-purple-card.svg';\r\n\r\n// styles\r\nconst PurpleWrapper = styled('span')({\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        top: '32%',\r\n        left: '40%',\r\n        width: 313,\r\n        backgroundSize: 380,\r\n        height: 280,\r\n        backgroundImage: `url(${AuthPurpleCard})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        animation: '15s wings ease-in-out infinite'\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        top: '23%',\r\n        left: '37%',\r\n        width: 243,\r\n        height: 210,\r\n        backgroundSize: 380,\r\n        backgroundImage: `url(${AuthBlueCard})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        animation: '15s wings ease-in-out infinite',\r\n        animationDelay: '1s'\r\n    }\r\n});\r\n\r\n// carousel items\r\nconst items = [\r\n    {\r\n        title: 'Components Based Design System',\r\n        description: 'Powerful and easy to use multipurpose theme'\r\n    },\r\n    {\r\n        title: 'Components Based Design System',\r\n        description: 'Powerful and easy to use multipurpose theme'\r\n    },\r\n    {\r\n        title: 'Components Based Design System',\r\n        description: 'Powerful and easy to use multipurpose theme'\r\n    }\r\n];\r\n\r\n// ================================|| AUTH1 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7} sx={{ my: 3 }}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Grid\r\n                                    container\r\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                    alignItems={matchDownSM ? 'center' : 'inherit'}\r\n                                    justifyContent={matchDownSM ? 'center' : 'space-between'}\r\n                                >\r\n                                    <Grid item>\r\n                                        <Stack\r\n                                            justifyContent={matchDownSM ? 'center' : 'flex-start'}\r\n                                            textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                        >\r\n                                            <Typography\r\n                                                color={theme.palette.secondary.main}\r\n                                                gutterBottom\r\n                                                variant={matchDownSM ? 'h3' : 'h2'}\r\n                                            >\r\n                                                Hi, Welcome Back\r\n                                            </Typography>\r\n                                            <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\r\n                                                Login in to your account\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item sx={{ mb: { xs: 3, sm: 0 } }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <AuthLogin loginProp={1} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs={12}>\r\n                                    <Typography\r\n                                        component={Link}\r\n                                        to=\"/pages/register/register1\"\r\n                                        variant=\"subtitle1\"\r\n                                        sx={{ textDecoration: 'none' }}\r\n                                    >\r\n                                        Don&apos;t have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                                <PurpleWrapper />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container justifyContent=\"center\" sx={{ pb: 8 }}>\r\n                                    <Grid item xs={10} lg={8} sx={{ '& .slick-list': { pb: 2 } }}>\r\n                                        <AuthSlider items={items} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Slider from 'react-slick';\r\n\r\nconst AuthSlider = ({ items }) => {\r\n    const settings = {\r\n        autoplay: true,\r\n        arrows: false,\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <Slider {...settings}>\r\n            {items.map((item, i) => (\r\n                <Grid key={i} container direction=\"column\" alignItems=\"center\" spacing={3} textAlign=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h1\">{item.title}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle2\">{item.description}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            ))}\r\n        </Slider>\r\n    );\r\n};\r\n\r\nAuthSlider.propTypes = {\r\n    items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AuthSlider;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/auth-pattern.d80b0e94.svg\";","export default __webpack_public_path__ + \"static/media/auth-pattern-dark.df61463d.svg\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth/auth-pattern.svg';\r\nimport AuthPatternDark from 'assets/images/auth/auth-pattern-dark.svg';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '100vh',\r\n                bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n                position: 'absolute',\r\n                backgroundPosition: '0 0',\r\n                overflow: 'hidden',\r\n                m: '0 0 0 auto',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}