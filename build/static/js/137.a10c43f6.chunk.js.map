{"version":3,"sources":["views/forms/tables/TableStickyHead.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","StickyHeadTable","React","page","setPage","rowsPerPage","setRowsPerPage","content","title","secondary","link","sx","maxHeight","stickyHeader","map","column","py","style","slice","row","hover","role","tabIndex","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","Avatar","color","outline","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","CardSecondaryAction","icon","placement","disableRipple","Link","href","alt","viewBox","fill","xmlns","clipPath","d","primary","main","transform"],"mappings":"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","file":"static/js/137.a10c43f6.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\n// material-ui\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n        id: 'population',\r\n        label: 'Population',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US')\r\n    },\r\n    {\r\n        id: 'size',\r\n        label: 'Size\\u00a0(km\\u00b2)',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US')\r\n    },\r\n    {\r\n        id: 'density',\r\n        label: 'Density',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => typeof value === 'number' && value.toFixed(2)\r\n    }\r\n];\r\n\r\n// table data\r\nfunction createData(name, code, population, size) {\r\n    const density = population / size;\r\n    return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n    createData('India', 'IN', 1324171354, 3287263),\r\n    createData('China', 'CN', 1403500365, 9596961),\r\n    createData('Italy', 'IT', 60483973, 301340),\r\n    createData('United States', 'US', 327167434, 9833520),\r\n    createData('Canada', 'CA', 37602103, 9984670),\r\n    createData('Australia', 'AU', 25475400, 7692024),\r\n    createData('Germany', 'DE', 83019200, 357578),\r\n    createData('Ireland', 'IE', 4857000, 70273),\r\n    createData('Mexico', 'MX', 126577691, 1972550),\r\n    createData('Japan', 'JP', 126317000, 377973),\r\n    createData('France', 'FR', 67022000, 640679),\r\n    createData('United Kingdom', 'GB', 67545757, 242495),\r\n    createData('Russia', 'RU', 146793744, 17098246),\r\n    createData('Nigeria', 'NG', 200962417, 923768),\r\n    createData('Brazil', 'BR', 210147125, 8515767)\r\n];\r\n\r\n// ==============================|| TABLE - STICKY HEADER ||============================== //\r\n\r\nexport default function StickyHeadTable() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event?.target?.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Sticky Header\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            {/* table */}\r\n            <TableContainer sx={{ maxHeight: 440 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell sx={{ py: 3 }} key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                            <TableRow sx={{ py: 3 }} hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                {columns.map((column) => {\r\n                                    const value = row[column.id];\r\n                                    return (\r\n                                        <TableCell key={column.id} align={column.align}>\r\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}