{"version":3,"sources":["views/application/kanban/index.js"],"names":["a11yProps","index","id","KanbanPage","dispatch","useDispatch","selectedTab","useLocation","pathname","useState","value","setValue","useEffect","openDrawer","getItems","getColumns","getColumnsOrder","getProfiles","getComments","getUserStory","getUserStoryOrder","sx","display","container","item","xs","contentSX","p","variant","onChange","event","newValue","px","pb","minWidth","py","mr","color","flexDirection","alignItems","justifyContent","marginBottom","textTransform","component","Link","to","label"],"mappings":"8SAYA,SAASA,EAAUC,GACf,MAAO,CACHC,GAAG,cAAD,OAAgBD,GAClB,gBAAgB,mBAAhB,OAAoCA,IAM7B,SAASE,IACpB,IAAMC,EAAWC,cAGbC,EAAc,EAClB,GACS,yBAJYC,cAAbC,SAKAF,EAAc,OAIdA,EAAc,EAGtB,MAA0BG,mBAASH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAENR,EAASS,aAAW,MAErB,IAEHD,qBAAU,WACNR,EAASU,eACTV,EAASW,eACTX,EAASY,eACTZ,EAASa,eACTb,EAASc,eACTd,EAASe,eACTf,EAASgB,iBAEV,IAGC,cAAC,IAAD,CAAKC,GAAI,CAAEC,QAAS,QAApB,SACI,cAAC,IAAD,CAAMC,WAAS,EAAf,SACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,eAAC,IAAD,CAAUC,UAAW,CAAEC,EAAG,GAA1B,UACI,eAAC,IAAD,CACIjB,MAAOA,EACPkB,QAAQ,aACRC,SA7BH,SAACC,EAAOC,GACzBpB,EAASoB,IA6BWV,GAAI,CACAW,GAAI,EACJC,GAAI,EACJ,MAAO,CACHC,SAAU,GACVF,GAAI,EACJG,GAAI,IACJC,GAAI,KACJC,MAAO,WACPf,QAAS,OACTgB,cAAe,MACfC,WAAY,SACZC,eAAgB,UAEpB,mBAAoB,CAChBH,MAAO,gBAEX,YAAa,CACTI,aAAc,iBACdL,GAAI,OAvBhB,UA2BI,cAAC,IAAD,aACIf,GAAI,CAAEqB,cAAe,QACrBC,UAAWC,IACXC,GAAG,oBACHC,MAAiB,IAAVpC,EAAc,QAAU,iBAC3BV,EAAU,KAElB,cAAC,IAAD,aACIqB,GAAI,CAAEqB,cAAe,QACrBC,UAAWC,IACXC,GAAG,uBACHC,MAAiB,IAAVpC,EAAc,WAAa,mBAC9BV,EAAU,QAItB,cAAC,IAAD","file":"static/js/171.2fd404b5.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useLocation, Link, Outlet } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Box, Grid, Tab, Tabs } from '@mui/material';\r\nimport { getUserStory, getUserStoryOrder, getProfiles, getComments, getItems, getColumns, getColumnsOrder } from 'store/slices/kanban';\r\n\r\n// project imports\r\nimport { useDispatch } from 'store';\r\nimport { openDrawer } from 'store/slices/menu';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\n// ==============================|| APPLICATION - KANBAN ||============================== //\r\n\r\nexport default function KanbanPage() {\r\n    const dispatch = useDispatch();\r\n    const { pathname } = useLocation();\r\n\r\n    let selectedTab = 0;\r\n    switch (pathname) {\r\n        case '/app/kanban/backlogs':\r\n            selectedTab = 1;\r\n            break;\r\n        case '/app/kanban/board':\r\n        default:\r\n            selectedTab = 0;\r\n    }\r\n\r\n    const [value, setValue] = useState(selectedTab);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // hide left drawer when email app opens\r\n        dispatch(openDrawer(false));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems());\r\n        dispatch(getColumns());\r\n        dispatch(getColumnsOrder());\r\n        dispatch(getProfiles());\r\n        dispatch(getComments());\r\n        dispatch(getUserStory());\r\n        dispatch(getUserStoryOrder());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <MainCard contentSX={{ p: 2 }}>\r\n                        <Tabs\r\n                            value={value}\r\n                            variant=\"scrollable\"\r\n                            onChange={handleChange}\r\n                            sx={{\r\n                                px: 1,\r\n                                pb: 2,\r\n                                '& a': {\r\n                                    minWidth: 10,\r\n                                    px: 1,\r\n                                    py: 1.5,\r\n                                    mr: 2.25,\r\n                                    color: 'grey.600',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center'\r\n                                },\r\n                                '& a.Mui-selected': {\r\n                                    color: 'primary.main'\r\n                                },\r\n                                '& a > svg': {\r\n                                    marginBottom: '0px !important',\r\n                                    mr: 1.25\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Tab\r\n                                sx={{ textTransform: 'none' }}\r\n                                component={Link}\r\n                                to=\"/app/kanban/board\"\r\n                                label={value === 0 ? 'Board' : 'View as Board'}\r\n                                {...a11yProps(0)}\r\n                            />\r\n                            <Tab\r\n                                sx={{ textTransform: 'none' }}\r\n                                component={Link}\r\n                                to=\"/app/kanban/backlogs\"\r\n                                label={value === 1 ? 'Backlogs' : 'View as Backlog'}\r\n                                {...a11yProps(1)}\r\n                            />\r\n                        </Tabs>\r\n\r\n                        <Outlet />\r\n                    </MainCard>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n"],"sourceRoot":""}