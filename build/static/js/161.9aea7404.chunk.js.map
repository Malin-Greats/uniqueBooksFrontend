{"version":3,"sources":["views/application/users/list/Style1/UserList.js","views/application/users/list/Style1/index.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"names":["avatarImage","require","UserList","theme","useTheme","dispatch","useDispatch","React","useState","data","setData","usersS1","useSelector","state","user","useEffect","getUsersListStyle1","TableContainer","Table","TableHead","TableRow","TableCell","sx","pl","align","pr","TableBody","map","row","index","hover","id","Grid","container","spacing","alignItems","item","Avatar","alt","src","avatar","default","xs","zeroMinWidth","Typography","variant","component","name","status","color","width","height","noWrap","email","location","friends","followers","Chip","label","size","background","palette","mode","dark","main","success","light","orange","warning","Stack","direction","justifyContent","Tooltip","placement","title","IconButton","fontSize","borderColor","ListStylePage1","anchorEl","setAnchorEl","handleClose","MainCard","gridSpacing","OutlinedInput","placeholder","startAdornment","InputAdornment","position","stroke","content","p","Pagination","count","Button","grey","endIcon","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","props","styles","root","display","tablelvl2","defaultComponent","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","Provider","value","children","as","clsx","role"],"mappings":"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","file":"static/js/161.9aea7404.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Chip,\r\n    Grid,\r\n    IconButton,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\n\r\nimport { useDispatch, useSelector } from 'store';\r\nimport { getUsersListStyle1 } from 'store/slices/user';\r\n\r\n// assets\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone';\r\nimport BlockTwoToneIcon from '@mui/icons-material/BlockTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| USER LIST 1 ||============================== //\r\n\r\nconst UserList = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const { usersS1 } = useSelector((state) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        setData(usersS1);\r\n    }, [usersS1]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getUsersListStyle1());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell sx={{ pl: 3 }}>#</TableCell>\r\n                        <TableCell>User Profile</TableCell>\r\n                        <TableCell>Country</TableCell>\r\n                        <TableCell>Friends</TableCell>\r\n                        <TableCell>Followers</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                            Actions\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data &&\r\n                        data.map((row, index) => (\r\n                            <TableRow hover key={index}>\r\n                                <TableCell sx={{ pl: 3 }}>{row.id}</TableCell>\r\n                                <TableCell>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Avatar alt=\"User 1\" src={avatarImage(`./${row.avatar}`).default} />\r\n                                        </Grid>\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Typography align=\"left\" variant=\"subtitle1\" component=\"div\">\r\n                                                {row.name}{' '}\r\n                                                {row.status === 'Active' && (\r\n                                                    <CheckCircleIcon sx={{ color: 'success.dark', width: 14, height: 14 }} />\r\n                                                )}\r\n                                            </Typography>\r\n                                            <Typography align=\"left\" variant=\"subtitle2\" noWrap>\r\n                                                {row.email}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </TableCell>\r\n                                <TableCell>{row.location}</TableCell>\r\n                                <TableCell>{row.friends}</TableCell>\r\n                                <TableCell>{row.followers}</TableCell>\r\n                                <TableCell>\r\n                                    {row.status === 'Active' && (\r\n                                        <Chip\r\n                                            label=\"Active\"\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background:\r\n                                                    theme.palette.mode === 'dark'\r\n                                                        ? theme.palette.dark.main\r\n                                                        : theme.palette.success.light + 60,\r\n                                                color: theme.palette.success.dark\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                    {row.status === 'Rejected' && (\r\n                                        <Chip\r\n                                            label=\"Rejected\"\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background:\r\n                                                    theme.palette.mode === 'dark'\r\n                                                        ? theme.palette.dark.main\r\n                                                        : theme.palette.orange.light + 80,\r\n                                                color: theme.palette.orange.dark\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                    {row.status === 'Pending' && (\r\n                                        <Chip\r\n                                            label=\"Pending\"\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background:\r\n                                                    theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\r\n                                                color: theme.palette.warning.dark\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                        <Tooltip placement=\"top\" title=\"Message\">\r\n                                            <IconButton color=\"primary\" aria-label=\"delete\" size=\"large\">\r\n                                                <ChatBubbleTwoToneIcon sx={{ fontSize: '1.1rem' }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip placement=\"top\" title=\"Block\">\r\n                                            <IconButton\r\n                                                color=\"primary\"\r\n                                                sx={{\r\n                                                    color: theme.palette.orange.dark,\r\n                                                    borderColor: theme.palette.orange.main,\r\n                                                    '&:hover ': { background: theme.palette.orange.light }\r\n                                                }}\r\n                                                size=\"large\"\r\n                                            >\r\n                                                <BlockTwoToneIcon sx={{ fontSize: '1.1rem' }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Stack>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Grid, InputAdornment, Menu, MenuItem, OutlinedInput, Pagination, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserList from './UserList';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\n\r\n// ==============================|| USER LIST STYLE 1 ||============================== //\r\n\r\nconst ListStylePage1 = () => {\r\n    const theme = useTheme();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">List</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <OutlinedInput\r\n                            id=\"input-search-list-style1\"\r\n                            placeholder=\"Search\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                </InputAdornment>\r\n                            }\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n            content={false}\r\n        >\r\n            <UserList />\r\n            <Grid item xs={12} sx={{ p: 3 }}>\r\n                <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Pagination count={10} color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            size=\"large\"\r\n                            sx={{ color: theme.palette.grey[900] }}\r\n                            color=\"secondary\"\r\n                            endIcon={<ExpandMoreRoundedIcon />}\r\n                            onClick={handleClick}\r\n                        >\r\n                            10 Rows\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"menu-user-list-style1\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={handleClose}> 10 Rows</MenuItem>\r\n                            <MenuItem onClick={handleClose}> 20 Rows</MenuItem>\r\n                            <MenuItem onClick={handleClose}> 30 Rows </MenuItem>\r\n                        </Menu>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ListStylePage1;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"sourceRoot":""}