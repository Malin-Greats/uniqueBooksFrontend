{"version":3,"sources":["ui-component/cards/RevenueCard.js","ui-component/cards/UserCountCard.js","views/dashboard/Analytics/BestSellingAuthors.js","views/dashboard/Analytics/BestSellingBooks.js","views/dashboard/Analytics/LatestCustomerTableCard.js","views/dashboard/Analytics/index.js"],"names":["RevenueCard","primary","secondary","content","iconPrimary","color","theme","useTheme","matchDownXs","useMediaQuery","breakpoints","down","IconPrimary","primaryIcon","fontSize","sx","background","position","variant","right","top","width","height","opacity","container","direction","spacing","item","xs","IconWrapper","styled","left","bottom","transform","UserCountCard","justifyContent","alignItems","sm","align","BestSellingAuthors","title","url","useAuth","successSX","useState","authors","setAuthors","allAuthors","a","requestOptions","method","redirect","fetch","res","json","data","console","log","useEffect","tempIndexID","tempAuthors","newTempAuthors","tempRevenue","tempIndex","ArrTopFive","ArrDataIndex","length","i","parseFloat","totalRevenue","splice","ex","error","message","MainCard","style","List","component","my","ml","mr","map","author","index","ListItemButton","ListItemIcon","ListItemText","Stack","name","Typography","BestSellingBooks","books","setBooks","tempBooks","newTempBooks","allBooks","currentRevenue","book","LatestCustomerTableCard","padding","TableContainer","Table","TableHead","TableRow","TableCell","pl","TableBody","hover","CardMedia","image","email","phone","Divider","Analytics","palette","mode","dark","main","grey","Grid","gridSpacing","lg","md","MonetizationOnTwoToneIcon","AccountCircleTwoTone"],"mappings":"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","file":"static/js/152.820d5da8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, Grid, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// =============================|| REVENUE CARD ||============================= //\r\n\r\nconst RevenueCard = ({ primary, secondary, content, iconPrimary, color }) => {\r\n    const theme = useTheme();\r\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const IconPrimary = iconPrimary;\r\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\r\n\r\n    return (\r\n        <Card sx={{ background: color, position: 'relative', color: '#fff' }}>\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 13,\r\n                        top: 14,\r\n                        color: '#fff',\r\n                        '&> svg': { width: 100, height: 100, opacity: '0.5' },\r\n                        [theme.breakpoints.down('sm')]: {\r\n                            top: 13,\r\n                            '&> svg': { width: 80, height: 80 }\r\n                        }\r\n                    }}\r\n                >\r\n                    {primaryIcon}\r\n                </Typography>\r\n                <Grid container direction={matchDownXs ? 'column' : 'row'} spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" color=\"inherit\">\r\n                            {primary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" color=\"inherit\">\r\n                            {secondary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" color=\"inherit\">\r\n                            {content}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nRevenueCard.propTypes = {\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    content: PropTypes.string,\r\n    iconPrimary: PropTypes.object,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default RevenueCard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\r\n\r\n// styles\r\nconst IconWrapper = styled('div')({\r\n    position: 'absolute',\r\n    left: '-17px',\r\n    bottom: '-27px',\r\n    color: '#fff',\r\n    transform: 'rotate(25deg)',\r\n    '&> svg': {\r\n        width: '100px',\r\n        height: '100px',\r\n        opacity: '0.35'\r\n    }\r\n});\r\n\r\n// =============================|| USER NUM CARD ||============================= //\r\n\r\nconst UserCountCard = ({ primary, secondary, iconPrimary, color }) => {\r\n    const IconPrimary = iconPrimary;\r\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\r\n\r\n    return (\r\n        <Card sx={{ background: color, position: 'relative', color: '#fff' }}>\r\n            <CardContent>\r\n                <IconWrapper>{primaryIcon}</IconWrapper>\r\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\r\n                            {secondary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"body1\" align=\"center\" color=\"inherit\">\r\n                            {primary}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nUserCountCard.propTypes = {\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    iconPrimary: PropTypes.object,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default UserCountCard;\r\n","import PropTypes from 'prop-types';\nimport {useState, useEffect} from 'react'\n\nimport useAuth from 'hooks/useAuth';\n\n// material-ui\nimport { Divider, List, ListItemButton, ListItemIcon, ListItemText, Stack, Typography } from '@mui/material';\n\n// third party\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\n// ===========================|| DASHBOARD ANALYTICS - TOTAL REVENUE CARD ||=========================== //\n\nconst BestSellingAuthors = ({ title }) => {\n    const { url } = useAuth();\n    const successSX = { color: 'success.dark' };\n    const errorSX = { color: 'error.main' };\n\n    const [authors, setAuthors] = useState([])\n    const [topAuthors, setTopAuthors] = useState([])\n    \n\n    const allAuthors = async() => {\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          \n          const res = await fetch(`${url}/author/author-profile-list`, requestOptions)\n          const data = await res.json()\n          console.log(res)\n          console.log('Res Data', data)\n          setAuthors(data)\n    }\n\n    useEffect(()=> {\n        allAuthors()\n        \n    }, [])\n    \n    let tempAuthors = authors\n    let newTempAuthors = []\n    let tempRevenue = 0\n    let tempIndexID \n    let tempIndex = 0\n    let ArrTopFive = []\n    let ArrDataIndex = []\n\n\n    try {\n        console.log('State Authors', tempAuthors.length)\n        if (tempAuthors === 0 ) {\n            for (let i = 0; i < 5; i++) {\n                console.log('First Temp Rev', tempRevenue)\n                for (let i = 0; i < tempAuthors.length; i++) {\n                    console.log('Check', i)\n                    console.log(parseFloat(tempAuthors[i].totalRevenue))\n                    if (parseFloat(tempAuthors[i].totalRevenue) > tempRevenue) {\n                        tempRevenue = parseFloat(tempAuthors[i].totalRevenue)\n                        tempIndexID = tempAuthors[i]\n                        tempIndex = i\n                       \n                    }\n                    console.log('Current Index', i)\n                    console.log('Current Temp Rev', tempRevenue)\n                }\n                console.log('Current Temp Rev II', tempRevenue)\n                console.log('added', i)\n                console.log('temp Index', tempIndex)\n                newTempAuthors = tempAuthors.splice(tempIndex, 1)\n                console.log(newTempAuthors)\n                console.log(tempAuthors)\n    \n                ArrTopFive[i] = tempRevenue\n                ArrDataIndex[i] = tempIndexID   \n                tempRevenue = 0\n                tempIndex = 0\n                console.log('Current top Five', ArrTopFive)\n            }\n            console.log('Array Top Five', ArrTopFive)\n            console.log('Array Data Index', ArrDataIndex)\n            console.log('Array New Temp Books', newTempAuthors)\n            \n            // setTopBooks(ArrDataIndex)\n        }\n          } catch (ex) {\n            console.error('outer', ex.message);\n          }\n            // console.log('Top Books', topBooks)\n          \n        \n\n  \n\n    return (\n        <MainCard title={title} content={false}>\n            <PerfectScrollbar style={{ height: 250 }}>\n                <List\n                    component=\"nav\"\n                    aria-label=\"main mailbox folders\"\n                    sx={{\n                        '& svg': {\n                            width: 32,\n                            my: -0.75,\n                            ml: -0.75,\n                            mr: 0.75\n                        }\n                    }}\n                >\n                    {tempAuthors === 0 &&\n                         ArrDataIndex.map((author, index)=> (\n                            <ListItemButton>\n                                <ListItemIcon>\n                                    <ArrowDropUpIcon sx={successSX} />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={\n                                        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                            <span>{author.name}</span>\n                                            <Typography sx={successSX}>+$ {author.totalRevenue}</Typography>\n                                        </Stack>\n                                    }\n                                />\n                            </ListItemButton>\n            \n                            ))}\n                   \n                    \n                    \n                \n                            \n                </List>\n            </PerfectScrollbar>\n        </MainCard>\n    );\n};\n\nBestSellingAuthors.propTypes = {\n    title: PropTypes.string\n};\n\nexport default BestSellingAuthors;\n","import PropTypes from 'prop-types';\nimport {useState, useEffect} from 'react';\n// material-ui\nimport { Divider, List, ListItemButton, ListItemIcon, ListItemText, Stack, Typography } from '@mui/material';\n\nimport useAuth from 'hooks/useAuth';\n\n// third party\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\n// ===========================|| DASHBOARD ANALYTICS - TOTAL REVENUE CARD ||=========================== //\n\nconst BestSellingBooks = ({ title }) => {\n    const { url } = useAuth();\n    const successSX = { color: 'success.dark' };\n    const errorSX = { color: 'error.main' };\n\n    const [books, setBooks] = useState([])\n    const [topBooks, setTopBooks] = useState([])\n    \n\n    let tempBooks = books\n    let newTempBooks = []\n    let tempRevenue = 0\n    let tempIndexID \n    let tempIndex = 0\n    let ArrTopFive = []\n    let ArrDataIndex = []\n\n    const allBooks = async() => {\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          \n          const res = await fetch(`${url}/author/book-publish-list`, requestOptions)\n          const data = await res.json()\n          console.log(res)\n          console.log('Res Data', data)\n          setBooks(data)\n    }\n\n    useEffect(()=> {\n        allBooks()\n        \n\n        try {\n            console.log('State Books', tempBooks)\n    \n            for (let i = 0; i < 5; i++) {\n                console.log('First Temp Rev', tempRevenue)\n                for (let i = 0; i < tempBooks.length; i++) {\n                    console.log('Check', i)\n                    console.log(parseFloat(tempBooks[i].currentRevenue))\n                    if (parseFloat(tempBooks[i].currentRevenue) > tempRevenue) {\n                        tempRevenue = parseFloat(tempBooks[i].currentRevenue)\n                        tempIndexID = tempBooks[i]\n                        tempIndex = i\n                       \n                    }\n                    console.log('Current Index', i)\n                    console.log('Current Temp Rev', tempRevenue)\n                }\n                console.log('Current Temp Rev II', tempRevenue)\n                console.log('added', i)\n                console.log('temp Index', tempIndex)\n                newTempBooks = tempBooks.splice(tempIndex, 1)\n                console.log(newTempBooks)\n                console.log(tempBooks)\n    \n                ArrTopFive[i] = tempRevenue\n                ArrDataIndex[i] = tempIndexID   \n                tempRevenue = 0\n                tempIndex = 0\n                console.log('Current top Five', ArrTopFive)\n            }\n            console.log('Array Top Five', ArrTopFive)\n            console.log('Array Data Index', ArrDataIndex)\n            console.log('Array New Temp Books', newTempBooks)\n\n          } catch (ex) {\n            console.error('outer', ex.message);\n          }\n            // console.log('Top Books', topBooks)\n    \n    \n    }, [])\n    \n    \n\n\n\n\n    \n        \n    return (\n        <MainCard title={title} content={false}>\n            <PerfectScrollbar style={{ height: 250 }}>\n                <List\n                    component=\"nav\"\n                    aria-label=\"main mailbox folders\"\n                    sx={{\n                        '& svg': {\n                            width: 32,\n                            my: -0.75,\n                            ml: -0.75,\n                            mr: 0.75\n                        }\n                    }}\n                >\n\n                {ArrDataIndex.map((book, index)=> (\n                    <ListItemButton>\n                    <ListItemIcon>\n                        <ArrowDropUpIcon sx={successSX} />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                <span>{book.title}</span>\n                                <Typography sx={successSX}>+$ {book.currentRevenue}</Typography>\n                            </Stack>\n                        }\n                    />\n                </ListItemButton>\n                ))}\n                   \n                </List>\n            </PerfectScrollbar>\n        </MainCard>\n    );\n};\n\nBestSellingBooks.propTypes = {\n    title: PropTypes.string\n};\n\nexport default BestSellingBooks;\n","import PropTypes from 'prop-types';\r\nimport {useState, useEffect} from 'react'\r\n\r\n// material-ui\r\nimport { Button, CardActions, CardMedia, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\n\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// third party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n\r\n\r\n// =========================|| DASHBOARD ANALYTICS - LATEST CUSTOMERS TABLE CARD ||========================= //\r\n\r\nconst LatestCustomerTableCard = ({ title }) => {\r\n    const { url } = useAuth();\r\n\r\n    const [authors, setAuthors] = useState([])\r\n    \r\n    useEffect( async() => {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n          \r\n        const res = await fetch(`${url}/author/author-profile-list`, requestOptions)\r\n        const data = await res.json()\r\n        setAuthors(data)\r\n    }, [])\r\n\r\n    return(\r\n    <MainCard title={title} content={false}>\r\n        <PerfectScrollbar style={{ height: 450, padding: 0 }}>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell sx={{ pl: 3 }}>Image</TableCell>\r\n                            <TableCell align=\"left\">Name</TableCell>\r\n                            <TableCell align=\"left\">Email</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Phone\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {authors.map((author, index) => (\r\n                            <TableRow hover key={index}>\r\n                                <TableCell sx={{ pl: 3 }}>\r\n                                    <CardMedia component=\"img\" image={author.image} title=\"image\" sx={{ width: 30, height: 'auto' }} />\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{author.name}</TableCell>\r\n                                <TableCell align=\"left\">{author.email}</TableCell>\r\n                                <TableCell align=\"center\">{author.phone}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </PerfectScrollbar>\r\n\r\n        <Divider />\r\n        {/* <CardActions sx={{ justifyContent: 'flex-end' }}>\r\n            <Button variant=\"text\" size=\"small\">\r\n                View all Latest Customers\r\n            </Button>\r\n        </CardActions> */}\r\n    </MainCard>\r\n)}\r\n\r\nLatestCustomerTableCard.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default LatestCustomerTableCard;\r\n","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport MarketShareAreaChartCard from './MarketShareAreaChartCard';\r\nimport TotalRevenueCard from './TotalRevenueCard';\r\nimport BestSellingAuthors from './BestSellingAuthors';\r\nimport BestSellingBooks from './BestSellingBooks';\r\nimport LatestCustomerTableCard from './LatestCustomerTableCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport RevenueCard from 'ui-component/cards/RevenueCard';\r\nimport UserCountCard from 'ui-component/cards/UserCountCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconShare, IconAccessPoint, IconCircles, IconCreditCard } from '@tabler/icons';\r\nimport MonetizationOnTwoToneIcon from '@mui/icons-material/MonetizationOnTwoTone';\r\nimport AccountCircleTwoTone from '@mui/icons-material/AccountCircleTwoTone';\r\nimport DescriptionTwoToneIcon from '@mui/icons-material/DescriptionTwoTone';\r\n\r\n// ==============================|| ANALYTICS DASHBOARD ||============================== //\r\n\r\nconst Analytics = () => {\r\n    const theme = useTheme();\r\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const blockSX = {\r\n        p: 2.5,\r\n        borderLeft: '1px solid ',\r\n        borderBottom: '1px solid ',\r\n        borderLeftColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[200],\r\n        borderBottomColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[200]\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} lg={8} md={6}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    {/* <Grid item xs={12}>\r\n                        <MarketShareAreaChartCard />\r\n                    </Grid> */}\r\n                    <Grid item xs={12} lg={4}>\r\n                        <RevenueCard\r\n                            primary=\"Revenue\"\r\n                            secondary=\"$42,562\"\r\n                            content=\"$50,032 Last Month\"\r\n                            iconPrimary={MonetizationOnTwoToneIcon}\r\n                            color={theme.palette.secondary.main}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={4}>\r\n                        <RevenueCard\r\n                            primary=\"Orders Received\"\r\n                            secondary=\"486\"\r\n                            content=\"20% Increase\"\r\n                            iconPrimary={AccountCircleTwoTone}\r\n                            color={theme.palette.primary.main}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={4}>\r\n                        <RevenueCard\r\n                            primary=\"Revenue\"\r\n                            secondary=\"$42,562\"\r\n                            content=\"$50,032 Last Month\"\r\n                            iconPrimary={MonetizationOnTwoToneIcon}\r\n                            color={theme.palette.secondary.main}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <LatestCustomerTableCard title=\"Latest Authors\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} lg={4} md={6}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        {/* <TotalRevenueCard title=\"Total Revenue\" /> */}\r\n                        <BestSellingAuthors title=\"Best Selling Authors\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {/* <TotalRevenueCard title=\"Total Revenue\" /> */}\r\n                        <BestSellingBooks title=\"Best Selling Books\" />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                        <UserCountCard\r\n                            primary=\"Daily user\"\r\n                            secondary=\"1,658\"\r\n                            iconPrimary={AccountCircleTwoTone}\r\n                            color={theme.palette.secondary.main}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <UserCountCard\r\n                            primary=\"Daily page view\"\r\n                            secondary=\"1K\"\r\n                            iconPrimary={DescriptionTwoToneIcon}\r\n                            color={theme.palette.primary.main}\r\n                        />\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Analytics;\r\n"],"sourceRoot":""}