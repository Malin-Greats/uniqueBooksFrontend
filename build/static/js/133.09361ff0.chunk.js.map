{"version":3,"sources":["views/forms/plugins/Modal/SimpleModal.js","views/forms/plugins/Modal/ServerModal.js","views/forms/plugins/Modal/index.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","Body","React","forwardRef","ref","modalStyle","handleClose","tabIndex","MainCard","style","sx","position","width","xs","lg","title","content","secondary","IconButton","onClick","size","fontSize","CardContent","Typography","variant","mt","Divider","CardActions","SimpleModal","useState","open","setOpen","Grid","container","justifyContent","Button","type","onClose","propTypes","PropTypes","object","func","ModalWrapper","styled","marginBottom","height","flexGrow","minWidth","zIndex","display","ServerModal","rootRef","useRef","disablePortal","disableEnforceFocus","disableAutoFocus","p","alignItems","current","Modal","link","Avatar","color","outline","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","spacing","CardSecondaryAction","icon","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id"],"mappings":"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","file":"static/js/133.09361ff0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n// generate random\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\n// modal position\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst Body = React.forwardRef(({ modalStyle, handleClose }, ref) => (\r\n    <div ref={ref} tabIndex={-1}>\r\n        <MainCard\r\n            style={modalStyle}\r\n            sx={{\r\n                position: 'absolute',\r\n                width: { xs: 280, lg: 450 },\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            title=\"Title\"\r\n            content={false}\r\n            secondary={\r\n                <IconButton onClick={handleClose} size=\"large\">\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            <CardContent>\r\n                <Typography variant=\"body1\">Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.</Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                    Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\r\n                    mollit irure enim tempor in.\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <SimpleModal />\r\n            </CardActions>\r\n        </MainCard>\r\n    </div>\r\n));\r\n\r\nBody.propTypes = {\r\n    modalStyle: PropTypes.object,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\n// ==============================|| SIMPLE MODAL ||============================== //\r\n\r\nexport default function SimpleModal() {\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"flex-end\">\r\n            <Button variant=\"contained\" type=\"button\" onClick={handleOpen}>\r\n                Open Modal\r\n            </Button>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Body modalStyle={modalStyle} handleClose={handleClose} />\r\n            </Modal>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst ModalWrapper = styled('div')({\r\n    marginBottom: 16,\r\n    height: 500,\r\n    flexGrow: 1,\r\n    minWidth: 300,\r\n    zIndex: -1,\r\n    transform: 'translateZ(0)',\r\n    '@media all and (-ms-high-contrast: none)': {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n// ==============================|| SERVER MODAL ||============================== //\r\n\r\nexport default function ServerModal() {\r\n    const rootRef = React.useRef(null);\r\n\r\n    return (\r\n        <ModalWrapper ref={rootRef}>\r\n            <Modal\r\n                disablePortal\r\n                disableEnforceFocus\r\n                disableAutoFocus\r\n                open\r\n                aria-labelledby=\"server-modal-title\"\r\n                aria-describedby=\"server-modal-description\"\r\n                sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}\r\n                container={() => rootRef.current}\r\n            >\r\n                <MainCard\r\n                    sx={{\r\n                        width: 450,\r\n                        zIndex: 1\r\n                    }}\r\n                    title=\"Server Side Modal\"\r\n                    content={false}\r\n                    secondary={\r\n                        <IconButton size=\"large\">\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant=\"body1\">\r\n                            Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                            Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute\r\n                            est in mollit irure enim tempor in.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Button variant=\"contained\" type=\"button\">\r\n                                Open Modal\r\n                            </Button>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </MainCard>\r\n            </Modal>\r\n        </ModalWrapper>\r\n    );\r\n}\r\n","// project imports\r\nimport SimpleModal from './SimpleModal';\r\nimport ServerModal from './ServerModal';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// ==============================|| MODAL PAGE ||============================== //\r\n\r\nconst Modal = () => (\r\n    <MainCard title=\"Simple Modal\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/modal/\" />}>\r\n        <ServerModal />\r\n        <SimpleModal />\r\n    </MainCard>\r\n);\r\n\r\nexport default Modal;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}