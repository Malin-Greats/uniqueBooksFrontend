{"version":3,"sources":["views/forms/chart/OrgChart/SkypeIcon.js","views/forms/chart/OrgChart/MeetIcon.js","views/forms/chart/OrgChart/LinkedIn.js","views/forms/chart/OrgChart/DataCard.js","views/forms/chart/OrgChart/Card.js","views/forms/chart/OrgChart/index.js","ui-component/extended/Avatar.js"],"names":["SkypeIcon","xmlns","x","y","width","height","viewBox","fill","d","MeetIcon","transform","points","LinkedIn","DataCard","name","role","avatar","linkedin","meet","skype","root","linkHandler","link","window","open","theme","useTheme","subTree","palette","mode","rootTree","MainCard","sx","bgcolor","border","primary","main","secondary","m","content","List","p","ListItem","alignItems","ListItemAvatar","Avatar","src","size","ListItemText","Typography","variant","color","Stack","spacing","pl","mt","Box","display","Chip","label","fontSize","px","direction","IconButton","onClick","borderRadius","Card","items","map","item","id","children","data","SimpleTree","TreeCard","OrgChartPage","dispatch","useDispatch","useEffect","openDrawer","Grid","container","rowSpacing","justifyContent","md","lg","xs","CardHeader","title","overflow","lineWidth","lineColor","lineBorderRadius","outline","others","colorSX","background","paper","outlineSX","borderColor","sizeSX"],"mappings":"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","file":"static/js/159.0b315f42.chunk.js","sourcesContent":["function SkypeIcon() {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 48 48\">\r\n            <path fill=\"#03a9f4\" d=\"M24 4A20 20 0 1 0 24 44A20 20 0 1 0 24 4Z\" />\r\n            <path\r\n                fill=\"#03a9f4\"\r\n                d=\"M33.5 22A11.5 11.5 0 1 0 33.5 45 11.5 11.5 0 1 0 33.5 22zM14.5 3A11.5 11.5 0 1 0 14.5 26 11.5 11.5 0 1 0 14.5 3z\"\r\n            />\r\n            <path\r\n                fill=\"#fff\"\r\n                d=\"M24.602,36C18,36,15,32.699,15,30.199C15,28.898,15.898,28,17.199,28c2.801,0,2.102,4.102,7.402,4.102c2.699,0,4.199-1.5,4.199-3c0-0.902-0.402-1.902-2.199-2.402l-5.902-1.5C16,24,15.102,21.398,15.102,18.898c0-5.098,4.699-6.898,9.098-6.898C28.301,12,33,14.199,33,17.199c0,1.301-1,2.102-2.301,2.102c-2.398,0-2-3.402-6.801-3.402c-2.398,0-3.797,1.102-3.797,2.703c0,1.598,1.898,2.098,3.598,2.5l4.402,1C32.898,23.199,34,26,34,28.699C33.898,32.898,30.898,36,24.602,36z\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SkypeIcon;\r\n","function MeetIcon() {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 48 48\">\r\n            <rect width=\"16\" height=\"16\" x=\"12\" y=\"16\" fill=\"#fff\" transform=\"rotate(-90 20 24)\" />\r\n            <polygon fill=\"#1e88e5\" points=\"3,17 3,31 8,32 13,31 13,17 8,16\" />\r\n            <path fill=\"#4caf50\" d=\"M37,24v14c0,1.657-1.343,3-3,3H13l-1-5l1-5h14v-7l5-1L37,24z\" />\r\n            <path fill=\"#fbc02d\" d=\"M37,10v14H27v-7H13l-1-5l1-5h21C35.657,7,37,8.343,37,10z\" />\r\n            <path fill=\"#1565c0\" d=\"M13,31v10H6c-1.657,0-3-1.343-3-3v-7H13z\" />\r\n            <polygon fill=\"#e53935\" points=\"13,7 13,17 3,17\" />\r\n            <polygon fill=\"#2e7d32\" points=\"38,24 37,32.45 27,24 37,15.55\" />\r\n            <path fill=\"#4caf50\" d=\"M46,10.11v27.78c0,0.84-0.98,1.31-1.63,0.78L37,32.45v-16.9l7.37-6.22C45.02,8.8,46,9.27,46,10.11z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default MeetIcon;\r\n","function LinkedIn() {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 48 48\">\r\n            <path fill=\"#0288D1\" d=\"M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5V37z\" />\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M12 19H17V36H12zM14.485 17h-.028C12.965 17 12 15.888 12 14.499 12 13.08 12.995 12 14.514 12c1.521 0 2.458 1.08 2.486 2.499C17 15.887 16.035 17 14.485 17zM36 36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698-1.501 0-2.313 1.012-2.707 1.99C24.957 25.543 25 26.511 25 27v9h-5V19h5v2.616C25.721 20.5 26.85 19 29.738 19c3.578 0 6.261 2.25 6.261 7.274L36 36 36 36z\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default LinkedIn;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box, Chip, IconButton, List, ListItem, ListItemText, ListItemAvatar, Stack, Typography, useTheme } from '@mui/material';\r\n\r\n// third party icons\r\nimport SkypeIcon from './SkypeIcon';\r\nimport MeetIcon from './MeetIcon';\r\nimport LinkedInIcon from './LinkedIn';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| DATACARD ORGANIZATION CHART ||============================== //\r\n\r\nfunction DataCard({ name, role, avatar, linkedin, meet, skype, root }) {\r\n    const linkHandler = (link) => {\r\n        window.open(link);\r\n    };\r\n    const theme = useTheme();\r\n\r\n    const subTree = theme.palette.mode === 'dark' ? `dark.800` : `grey.100`;\r\n    const rootTree = theme.palette.mode === 'dark' ? `dark.900` : `secondary.light`;\r\n\r\n    return (\r\n        <MainCard\r\n            sx={{\r\n                bgcolor: root ? rootTree : subTree,\r\n                border: root ? `1px solid ${theme.palette.primary.main}` : `1px solid${theme.palette.secondary.main}`,\r\n                width: 'max-content',\r\n                m: '0px auto'\r\n            }}\r\n            content={false}\r\n        >\r\n            <List sx={{ width: '100%', border: 'transparent', p: 1.5 }}>\r\n                <ListItem sx={{ p: 0, alignItems: 'flex-start' }}>\r\n                    <ListItemAvatar>\r\n                        <Avatar src={avatar} size=\"sm\" />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        sx={{ m: 0 }}\r\n                        primary={\r\n                            <Typography variant=\"subtitle1\" sx={{ color: root ? `primary.dark` : `secondary.dark` }}>\r\n                                {name}\r\n                            </Typography>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Stack spacing={2} sx={{ pl: 7, mt: -1.75 }}>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        {!root && (\r\n                            <Chip\r\n                                label={role}\r\n                                sx={{ fontSize: '0.625rem', height: 20, '& .MuiChip-label': { px: 0.75 } }}\r\n                                color=\"primary\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                            />\r\n                        )}\r\n                        {root && (\r\n                            <Typography sx={{ color: `secondary.dark` }} variant=\"caption\">\r\n                                {role}\r\n                            </Typography>\r\n                        )}\r\n                    </Box>\r\n                    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                        <IconButton\r\n                            onClick={() => linkHandler(linkedin)}\r\n                            size=\"small\"\r\n                            sx={{ bgcolor: theme.palette.mode === 'dark' ? 'dark.main' : 'background.paper', borderRadius: 1, p: 0.25 }}\r\n                        >\r\n                            <LinkedInIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={() => linkHandler(meet)}\r\n                            size=\"small\"\r\n                            sx={{ bgcolor: theme.palette.mode === 'dark' ? 'dark.main' : 'background.paper', borderRadius: 1, p: 0.25 }}\r\n                        >\r\n                            <MeetIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={() => linkHandler(skype)}\r\n                            size=\"small\"\r\n                            sx={{ bgcolor: theme.palette.mode === 'dark' ? 'dark.main' : 'background.paper', borderRadius: 1, p: 0.25 }}\r\n                        >\r\n                            <SkypeIcon />\r\n                        </IconButton>\r\n                    </Stack>\r\n                </Stack>\r\n            </List>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nDataCard.propTypes = {\r\n    name: PropTypes.string,\r\n    role: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    linkedin: PropTypes.string,\r\n    meet: PropTypes.string,\r\n    skype: PropTypes.string,\r\n    root: PropTypes.bool\r\n};\r\n\r\nexport default DataCard;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Fragment } from 'react';\r\n\r\n// third party\r\nimport { TreeNode } from 'react-organizational-chart';\r\n\r\n// project imports\r\nimport DataCard from './DataCard';\r\n\r\n// ==============================|| CARD ORGANIZATION CHART ||============================== //\r\n\r\nfunction Card({ items }) {\r\n    return (\r\n        <>\r\n            {items.map((item, id) => (\r\n                <Fragment key={id}>\r\n                    {item.children ? (\r\n                        <TreeNode\r\n                            label={\r\n                                <DataCard\r\n                                    name={item.name}\r\n                                    role={item.role}\r\n                                    avatar={item.avatar}\r\n                                    linkedin={item.linkedin}\r\n                                    meet={item.meet}\r\n                                    skype={item.skype}\r\n                                    root={false}\r\n                                />\r\n                            }\r\n                        >\r\n                            <Card items={item.children} />\r\n                        </TreeNode>\r\n                    ) : (\r\n                        <TreeNode\r\n                            label={\r\n                                <DataCard\r\n                                    name={item.name}\r\n                                    role={item.role}\r\n                                    avatar={item.avatar}\r\n                                    linkedin={item.linkedin}\r\n                                    meet={item.meet}\r\n                                    skype={item.skype}\r\n                                    root={false}\r\n                                />\r\n                            }\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nCard.propTypes = {\r\n    items: PropTypes.object\r\n};\r\n\r\nexport default Card;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { Grid, CardHeader, Typography } from '@mui/material';\r\nimport CardMui from '@mui/material/Card';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport DataCard from './DataCard';\r\nimport Card from './Card';\r\nimport { openDrawer } from 'store/slices/menu';\r\nimport { useDispatch } from 'store';\r\n\r\n// ==============================|| ORGANIZATION CHARTS ||============================== //\r\n\r\nconst data = [\r\n    {\r\n        name: 'Anne Teak',\r\n        role: 'CEO',\r\n        avatar: 'https://i.pravatar.cc/100?img=3',\r\n        linkedin: 'https://www.linkedin.com/',\r\n        meet: 'https://meet.google.com/',\r\n        skype: 'https://www.skype.com/en/',\r\n        children: [\r\n            {\r\n                name: 'Colin Sik',\r\n                role: 'CFO',\r\n                avatar: 'https://i.pravatar.cc/100?img=1',\r\n                linkedin: 'https://www.linkedin.com/',\r\n                meet: 'https://meet.google.com/',\r\n                skype: 'https://www.skype.com/en/',\r\n                children: [\r\n                    {\r\n                        name: 'Karen Onnabit',\r\n                        role: 'Controller',\r\n                        avatar: 'https://i.pravatar.cc/100?img=2',\r\n                        linkedin: 'https://www.linkedin.com/',\r\n                        meet: 'https://meet.google.com/',\r\n                        skype: 'https://www.skype.com/en/'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'Jen Tile',\r\n                role: 'VP of Marketing',\r\n                avatar: 'https://i.pravatar.cc/100?img=4',\r\n                linkedin: 'https://www.linkedin.com/',\r\n                meet: 'https://meet.google.com/',\r\n                skype: 'https://www.skype.com/en/',\r\n\r\n                children: [\r\n                    {\r\n                        name: 'Anne Thurium',\r\n                        role: 'Manager',\r\n                        avatar: 'https://i.pravatar.cc/100?img=5',\r\n                        linkedin: 'https://www.linkedin.com/',\r\n                        meet: 'https://meet.google.com/',\r\n                        skype: 'https://www.skype.com/en/',\r\n\r\n                        children: [\r\n                            {\r\n                                name: 'Liz Erd',\r\n                                role: 'Junior Manager',\r\n                                avatar: 'https://i.pravatar.cc/100?img=6',\r\n                                linkedin: 'https://www.linkedin.com/',\r\n                                meet: 'https://meet.google.com/',\r\n                                skype: 'https://www.skype.com/en/'\r\n                            },\r\n                            {\r\n                                name: 'Percy Vere',\r\n                                role: 'Programmer',\r\n                                avatar: 'https://i.pravatar.cc/100?img=7',\r\n                                linkedin: 'https://www.linkedin.com/',\r\n                                meet: 'https://meet.google.com/',\r\n                                skype: 'https://www.skype.com/en/'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'Harriet Upp',\r\n                role: 'VP of IT',\r\n                avatar: 'https://i.pravatar.cc/100?img=8',\r\n                linkedin: 'https://www.linkedin.com/',\r\n                meet: 'https://meet.google.com/',\r\n                skype: 'https://www.skype.com/en/',\r\n\r\n                children: [\r\n                    {\r\n                        name: 'Mark Ateer',\r\n                        role: 'System Admin',\r\n                        avatar: 'https://i.pravatar.cc/100?img=6',\r\n                        linkedin: 'https://www.linkedin.com/',\r\n                        meet: 'https://meet.google.com/',\r\n                        skype: 'https://www.skype.com/en/'\r\n                    },\r\n                    {\r\n                        name: 'Dave Allippa',\r\n                        role: 'System Admin',\r\n                        avatar: 'https://i.pravatar.cc/100?img=7',\r\n                        linkedin: 'https://www.linkedin.com/',\r\n                        meet: 'https://meet.google.com/',\r\n                        skype: 'https://www.skype.com/en/'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nfunction SimpleTree({ name }) {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Typography\r\n            sx={{\r\n                p: 2,\r\n                border: `1px solid ${theme.palette.mode === 'dark' ? theme.palette.secondary.main : theme.palette.primary.main}`,\r\n                width: 'max-content',\r\n                m: 'auto',\r\n                color: theme.palette.mode === 'dark' ? `text.secondary` : `secondary.dark`,\r\n                bgcolor: theme.palette.mode === 'dark' ? `background.default` : `secondary.light`,\r\n                borderRadius: 1\r\n            }}\r\n        >\r\n            {name}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nSimpleTree.propTypes = {\r\n    name: PropTypes.string\r\n};\r\n\r\nfunction TreeCard({ items }) {\r\n    return (\r\n        <>\r\n            {items.map((item, id) => (\r\n                <Fragment key={id}>\r\n                    {item.children ? (\r\n                        <TreeNode label={<SimpleTree name={item.name} />}>\r\n                            <TreeCard items={item.children} />\r\n                        </TreeNode>\r\n                    ) : (\r\n                        <TreeNode label={<SimpleTree name={item.name} />} />\r\n                    )}\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nTreeCard.propTypes = {\r\n    items: PropTypes.object\r\n};\r\n\r\nconst OrgChartPage = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(openDrawer(false));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container rowSpacing={2} justifyContent=\"center\">\r\n            <Grid item md={12} lg={12} xs={12}>\r\n                <CardMui>\r\n                    <CardHeader title=\"Organization Chart\" />\r\n                </CardMui>\r\n            </Grid>\r\n            <Grid item md={12} lg={12} xs={12}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={12} lg={12} xs={12}>\r\n                        <MainCard title=\"Simple Chart\" sx={{ overflow: 'auto' }}>\r\n                            <Tree\r\n                                lineWidth=\"1px\"\r\n                                lineColor={theme.palette.secondary.main}\r\n                                lineBorderRadius=\"10px\"\r\n                                label={<SimpleTree name={data[0].name} />}\r\n                            >\r\n                                <TreeCard items={data[0].children} />\r\n                            </Tree>\r\n                        </MainCard>\r\n                    </Grid>\r\n                    <Grid item md={12} lg={12} xs={12}>\r\n                        <MainCard title=\"Styled Chart\" sx={{ overflow: 'auto' }}>\r\n                            <Tree\r\n                                lineWidth=\"1px\"\r\n                                lineColor={theme.palette.secondary.main}\r\n                                lineBorderRadius=\"10px\"\r\n                                label={\r\n                                    <DataCard\r\n                                        name={data[0].name}\r\n                                        role={data[0].role}\r\n                                        avatar={data[0].avatar}\r\n                                        linkedin={data[0].linkedin}\r\n                                        meet={data[0].meet}\r\n                                        skype={data[0].skype}\r\n                                        root\r\n                                    />\r\n                                }\r\n                            >\r\n                                <Card items={data[0].children} />\r\n                            </Tree>\r\n                        </MainCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default OrgChartPage;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n"],"sourceRoot":""}