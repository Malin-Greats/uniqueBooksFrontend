{"version":3,"sources":["views/forms/components/Checkbox.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"names":["UICheckbox","theme","useTheme","title","secondary","link","container","spacing","gridSpacing","item","xs","md","color","sx","palette","success","main","defaultChecked","control","label","disabled","size","fontSize","error","warning","dark","Avatar","outline","others","colorSX","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","height","CardSecondaryAction","icon","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","id","transform","createSvgIcon","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","_extends","text","backgroundColor","alpha","action","active","hoverOpacity","checked","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type"],"mappings":"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","file":"static/js/118.05c297f1.chunk.js","sourcesContent":["// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Checkbox, FormControlLabel, Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| CHECKBOX ||============================== //\r\n\r\nconst UICheckbox = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <MainCard title=\"Checkbox\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/checkboxes/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={4}>\r\n                    <SubCard title=\"Basic checkboxes\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    sx={{\r\n                                        color: theme.palette.success.main,\r\n                                        '&.Mui-checked': { color: theme.palette.success.main }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"primary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox color=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"secondary\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <SubCard title=\"With label\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <FormControlLabel control={<Checkbox defaultChecked />} label=\"Checked\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControlLabel disabled control={<Checkbox />} label=\"Unchecked\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <SubCard title=\"Size\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"primary\" size=\"small\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"primary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"primary\" sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"With Color\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"primary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox defaultChecked color=\"secondary\" sx={{ color: theme.palette.secondary.main }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.error.main,\r\n                                        '&.Mui-checked': {\r\n                                            color: theme.palette.error.main\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.warning.dark,\r\n                                        '&.Mui-checked': {\r\n                                            color: theme.palette.warning.main\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Checkbox\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.success.dark,\r\n                                        '&.Mui-checked': {\r\n                                            color: theme.palette.success.main\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UICheckbox;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}